package circularqueue;

import linkedlist.ListNode;
import linkedlist.MyLinkedList;

public interface Queue {
	void enQueue(String data);
	String deQueue();
	void printAll();
	
	public class MyListQueue extends MyLinkedList implements Queue{
		
		private ListNode front;
		private ListNode rear;
		
		public MyListQueue(){
			
			front = null;
			rear = null;
		}

		@Override
		public void enQueue(String data) {
			
			ListNode newNode;
			
			if(isEmpty()){
				newNode = addElement(data);
				front = newNode;
				rear = newNode;
			}
			else{
				newNode = addElement(data);
				rear = newNode;
			}
		}

		@Override
		public String deQueue() {
			if(isEmpty()){
				System.out.println("queue is empty");
				return null;
			}
			else{
				String data = front.getData();
			}
		}

		@Override
		public void printAll() {

			
			ListNode temp = head;
			while(temp != null){
				System.out.print(temp.getData());
				temp = temp.next;
				if(temp != null){
					System.out.print("->");
				}
			}System.out.println();
		}
	}

}
